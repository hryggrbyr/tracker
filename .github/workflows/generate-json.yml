name: Generate JSON from Markdown Frontmatter
on:
  push:
    branches: [ main ]
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install gray-matter glob
    
    - name: Generate JSON
      run: |
        cat > generate-json.js << 'EOF'
        const fs = require('fs');
        const path = require('path');
        const matter = require('gray-matter');
        const glob = require('glob');
        
        const markdownFiles = glob.sync('src/books/*.md');
        const results = [];
        
        markdownFiles.forEach(file => {
          try {
            const content = fs.readFileSync(file, 'utf8');
            const { data } = matter(content);
            
            results.push({
              filename: path.basename(file),
              path: file,
              frontmatter: data
            });
          } catch (error) {
            console.error(`Error processing ${file}:`, error);
          }
        });
        
        if (!fs.existsSync('src/_data')) {
          fs.mkdirSync('src/_data', { recursive: true });
        }
        
        fs.writeFileSync('src/_data/books.json', JSON.stringify(results, null, 2));
        console.log(`Generated JSON with ${results.length} entries`);
        EOF
        
        node generate-json.js
    
    - name: Install 11ty dependencies
      run: npm install @11ty/eleventy
    
    - name: Build 11ty site
      run: npm run build
    
    - name: Copy JSON to public directory
      run: |
        if [ -f "src/_data/books.json" ]; then
          cp src/_data/books.json public/books.json
          echo "Copied books.json to public directory"
        else
          echo "Warning: src/_data/books.json not found"
        fi
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
